---
# Define nodeclasses and configuration parameters

#
# Inspect existing nodeclasses, config params and inventory
#
- name: config | Group hosts by defined nodeclasses
  group_by:
    key: scale_nodeclass_{{ item }}
  when: scale_nodeclass is defined
  with_items: "{{ scale_nodeclass }}"

- name: config | Initialize undefined variables
  set_fact:
    scale_config: []
  when: scale_config is undefined

- block:  ## run_once: true
    - name: config | Find existing nodeclasses
      shell: /usr/lpp/mmfs/bin/mmlsnodeclass --user -Y | grep -v HEADER | cut -d ':' -f 7
      register: scale_config_existing_nodeclasses
      changed_when: false
      failed_when: false

    - name: config | Find existing configuration parameters
      shell: /usr/lpp/mmfs/bin/mmlsconfig -Y | grep -v HEADER
      register: scale_config_existing_params
      changed_when: false
      failed_when: false

    - name: config | Find defined nodeclasses
      set_fact:
        scale_config_nodeclasses: "{{ scale_config_nodeclasses | default([]) + [ item ] }}"
      with_items: "{{ groups | select('match', '^scale_nodeclass_.*') | list }}"

    - name: config | Prepare NodeClass files
      vars:
        current_nodeclass: "{{ item | regex_replace('^scale_nodeclass_', '') }}"
      template:
        src: NodeClass.j2
        dest: /var/tmp/NodeClass.{{ current_nodeclass }}
      register: scale_config_nodeclassfile
      with_items: "{{ scale_config_nodeclasses | default([]) }}"
